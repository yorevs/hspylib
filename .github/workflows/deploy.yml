name: deploy
run-name: HSPyLib PyPi deploy \#${{github.run_number}} [@${{ github.actor }}]

on:
  workflow_dispatch:
    inputs:
      gradle_debug_params:
        description: 'Gradle debug parameters'
        default: ''
        required: false
        type: string
      pypi_env:
        description: 'Which PyPi instance to publish ?'
        default: 'pypi-test'
        required: true
        type: choice
        options:
          - 'pypi-test'
          - 'pypi-prod'
      module:
        description: 'Which HSPyLib module ?'
        default: 'all'
        required: true
        type: choice
        options: [
          "all", "cfman", "clitt", "datasource", "firebase", "hqt", "hspylib", "kafman", "setman", "vault"
        ]
      release_type:
        description: 'Update version before publish ?'
        type: choice
        required: true
        default: 'patch'
        options:
          - 'none'
          - 'patch'
          - 'minor'
          - 'major'

permissions:
  contents: write

jobs:
  deploy:
    strategy:
      matrix:
        module: [
          "cfman", "clitt", "datasource", "firebase", "hqt", "hspylib", "kafman", "setman", "vault"
        ]
    runs-on: ubuntu-latest
    environment: ${{ inputs.pypi_env }}
    env:
      PYPI_REPOSITORY: ${{ vars.PYPI_REPOSITORY }}
      PYPI_MODULE_URL: ${{ vars.PYPI_MODULE_URL }}
      PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      PYPI_MODULE: ${{ matrix.module }}
      FILES: ''
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: '7.4'
    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install Python tools
      run: ./gradlew installBuildTools ${gradle_debug_params}

    - name: Update patch number
      if: ${{ inputs.release_type == 'patch' }}
      run: ./gradlew "${{ matrix.module }}:patchVersion" ${gradle_debug_params}

    - name: Update minor number
      if: ${{ inputs.release_type == 'minor' }}
      run: ./gradlew "${{ matrix.module }}:updateMinor" ${gradle_debug_params}

    - name: Update major number
      if: ${{ inputs.release_type == 'major' }}
      run: ./gradlew "${{ matrix.module }}:updateMajor" ${gradle_debug_params}

    - name: Publish modules to PyPi
      if: ${{ inputs.module == 'all' || inputs.module == matrix.module }}
      run: |
        echo "Deploying module: (${{ matrix.module }}) to: ${{ inputs.pypi_env }} -> ${{ env.PYPI_REPOSITORY }}"

    - name: Check published package
      if: ${{ inputs.module == 'all' || inputs.module == matrix.module }}
      run: |
        ./gradlew "${{ matrix.module }}:pypiShow" ${gradle_debug_params}

    - name: Set the commit files
      run: |
        {
          echo 'FILES<<EOF'
          git status --porcelain | cut -c 4-
          echo EOF
        } >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v3
      with:
        name: 'deploy-workspace'
        path: |-
          ${{ env.FILES }}

  commit:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: 'deploy-workspace'
          path: ${{ github.workspace }}

      - name: Commit revision
        if: ${{ inputs.module == 'all' || inputs.module == matrix.module }}
        run: |
          git status

