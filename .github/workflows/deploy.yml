name: deploy
run-name: HSPyLib PyPi deploy - ${{github.run_number}} [@${{ github.actor }}]

on:
  workflow_dispatch:
    inputs:
      gradle_debug_params:
        description: 'Gradle debug parameters'
        default: ''
        required: false
        type: string
      pypi_env:
        description: 'Which PyPi instance to publish ?'
        default: 'pypi-test'
        required: true
        type: choice
        options:
          - 'pypi-test'
          - 'pypi-prod'
      module:
        description: 'Which HSPyLib module ?'
        default: 'all'
        required: true
        type: choice
        options: [
          "all", "cfman", "clitt", "datasource", "firebase", "hqt", "hspylib", "kafman", "setman", "vault"
        ]
      release_type:
        description: 'Update version before publish ?'
        type: choice
        required: true
        default: 'patch'
        options:
          - 'none'
          - 'patch'
          - 'minor'
          - 'major'

permissions:
  contents: write

jobs:
  preparation:
    strategy:
      fail-fast: true
      matrix:
        module: [
          "cfman", "clitt", "datasource", "firebase", "hqt", "hspylib", "kafman", "setman", "vault"
        ]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        if: ${{ inputs.module == 'all' || inputs.module == matrix.module }}
        run: |
          echo "matrix=$(echo $matrix), matrix.module" >> $GITHUB_OUTPUT
  deploy:
    needs: preparation
    strategy:
      matrix: ${{ preparation.outputs.matrix )}}
    runs-on: ubuntu-latest
    environment: ${{ inputs.pypi_env }}
    env:
      PYPI_REPOSITORY: ${{ vars.PYPI_REPOSITORY }}
      PYPI_MODULE_URL: ${{ vars.PYPI_MODULE_URL }}
      PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      PYPI_MODULE: ${{ matrix.module }}
    steps:
      - run: echo "${{ matrix.module }}"
