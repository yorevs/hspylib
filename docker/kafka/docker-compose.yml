version: '3.9'

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 60s
      retries: 3
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - zookeeper-data:/var/lib/zookeeper:rw
    networks:
      - esnet

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 10s
      timeout: 60s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      JMX_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
    volumes:
      - kafka-data:/var/lib/kafka:rw
    networks:
      - esnet

  kafka-manager:
    container_name: kafka-manager
    image: radarbase/kafka-manager:latest
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "-O", '-', 'localhost:9000/kafkamanager/api/health']
      interval: 10s
      timeout: 60s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    command: -Dconfig.file=conf/application.conf -Dapplication.home=bin/kafkamanager
    environment:
      ZK_HOSTS: zookeeper
      APPLICATION_SECRET: letmein
    ports:
      - 9000:9000
    networks:
      - esnet

  kafka-schema-registry:
    container_name: kafka-schema-registry
    image: confluentinc/cp-schema-registry:latest
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:8081/subjects" ]
      interval: 10s
      timeout: 60s
      retries: 3
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - esnet

volumes:
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local

networks:
  esnet:
