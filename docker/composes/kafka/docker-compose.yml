services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    restart: on-failure
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 30s
      timeout: 120s
      retries: 3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - zookeeper-data:/var/lib/zookeeper:rw
    networks:
      - esnet

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "bash -c '</dev/tcp/localhost/9092'" ]
      interval: 30s
      timeout: 120s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9093:9093"
      - "29092:29092"
    environment:
      KAFKA_JMX_PORT: 9093
      KAFKA_JMX_HOSTNAME: kafka-broker
      KAFKA_BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    volumes:
      - kafka-data:/var/lib/kafka:rw
    networks:
      - esnet

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/subjects || exit 1" ]
      interval: 30s
      timeout: 120s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker:9092"
      SCHEMA_REGISTRY_ZOOKEEPER_CONNECT: "zookeeper:2181"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    networks:
      - esnet

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: control-center
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9021/healthcheck || exit 1" ]
      interval: 30s
      timeout: 120s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - esnet

  rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    hostname: rest-proxy
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082" ]
      interval: 30s
      timeout: 120s
      retries: 3
    depends_on:
      kafka-broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
    networks:
      - esnet

volumes:
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local

networks:
  esnet:
    driver: bridge
