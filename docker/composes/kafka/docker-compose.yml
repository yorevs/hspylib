version: '3.9'

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    restart: on-failure
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 60s
      retries: 3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - zookeeper-data:/var/lib/zookeeper:rw
    networks:
      - esnet


  kafka-broker:
    container_name: kafka-broker
    image: confluentinc/cp-kafka:latest
    hostname: kafka_broker
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "nc -vz localhost 9092" ]
      interval: 10s
      timeout: 60s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_JMX_PORT: 9093
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema_registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka_broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
      - kafka-data:/var/lib/kafka:rw
    networks:
      - esnet


  kafka-manager:
    container_name: kafka-manager
    image: yorevs/hhs-kafka-manager:latest
    hostname: kafka_manager
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -fail -o /dev/null -s -w \"%{http_code}\n\" http://localhost:9000" ]
      interval: 10s
      timeout: 60s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
    command: -Dconfig.file=conf/application.conf -Dapplication.home=bin/kafkamanager
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper
      APPLICATION_SECRET: letmein
    networks:
      - esnet


  kafka-schema-registry:
    container_name: kafka-schema-registry
    image: confluentinc/cp-schema-registry:latest
    hostname: schema_registry
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -fail -o /dev/null -s -w \"%{http_code}\n\" http://127.0.0.1:8081/schemas/types" ]
      interval: 10s
      timeout: 60s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka_broker:29092"
      SCHEMA_REGISTRY_ZOOKEEPER_CONNECT: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    networks:
      - esnet


volumes:
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local


networks:
  esnet:
