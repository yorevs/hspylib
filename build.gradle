/*
    Gradle root build file
    Project: HSPyLib
    Created: 1st July, 2020
*/
plugins {
  id 'idea'
  id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.4"
}

idea {
  module {
    settings {
      rootModuleType = 'PYTHON_MODULE'
    }
    excludeDirs += file('.idea')
    excludeDirs += file('.gradle')
    excludeDirs += file('.vscode')
    excludeDirs += file('run-configs')
  }
}

configurations {
    modules
}

dependencies {
    project(':cfman')
    project(':firebase')
    project(':hspylib')
    project(':kafman')
    project(':vault')
}

subprojects {

  tasks.withType(Exec) {
    doFirst {
      println commandLine
    }
  }

  apply from: "$projectDir/gradle.properties"
}

ext {
  python = "python${pythonVersion}"
  pyrcc = "pyrcc${pyrccVersion}"
  buildTools = "${buildTools}".split(",")
  startTime = System.currentTimeMillis()
  verbose = findProperty('verbose') ?: false
}

/* Install hspylib build tools */
task installBuildTools(type: Task) {
  group = 'Install'
  description = 'Install hspylib build tools'
  doLast {
    println "Upgrading pip module to the latest "
    exec {
      commandLine rootProject.python, '-m', 'ensurepip', '-q', '--upgrade'
      commandLine rootProject.python, '-m', 'pip', '-q', 'install', '--upgrade', 'pip'
    }
    println "Installing build tools: [\n\t ${rootProject.buildTools.join(',\n\t')}\n]"
    rootProject.buildTools.each { tool ->
      exec {
        commandLine rootProject.python, '-m', 'pip', 'install', '--upgrade', tool
      }
    }
  }
}

/* Run Configurations */
task exportRunConfigurations(type: Copy) {
  group = 'Idea'
  description = "Export run configurations"
  from("${rootDir}/.idea/runConfigurations") {
    include '*.xml'
  }
  into "${rootDir}/run-configs/idea"
}

task importRunConfigurations(type: Copy) {
  group = 'Idea'
  description = "Import run configurations"
  from("${rootDir}/run-configs/idea") {
    include '*.xml'
  }
  into "${rootDir}/.idea/runConfigurations"
}

task clearRunConfigurations(type: Delete) {
  group = 'Idea'
  description = "Delete all run configurations"
  delete fileTree("${rootDir}/.idea/runConfigurations") {
    include "**/*.xml"
  }
  followSymlinks = true
}
