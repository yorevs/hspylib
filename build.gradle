/*
    Gradle root build file
    Project: HSPyLib
    Created: 1st July, 2020
*/
plugins {
  id 'idea'
  id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

idea {
  module {
    settings {
      rootModuleType = 'PYTHON_MODULE'
    }
    excludeDirs += file('.idea')
    excludeDirs += file('.gradle')
    excludeDirs += file('.vscode')
    excludeDirs += file('run-configs')
    excludeDirs += file('devel')
  }
}

configurations {
    modules
}

dependencies {
    project(':cfman')
    project(':clitt')
    project(':datasource')
    project(':firebase')
    project(':hqt')
    project(':hspylib')
    project(':kafman')
    project(':setman')
    project(':vault')
}

subprojects {

  tasks.withType(Exec) {
    doFirst {
      println ">>> ${commandLine}"
    }
  }

  apply from: "$projectDir/gradle.properties"

  project.afterEvaluate {
    assert project.ext.has("sourceRoot")
    assert project.ext.has("pythonPath")
  }
}

/* Project extension properties */
ext {
  python = "python" + (System.getenv('PYTHON_VERSION') ?: '3.11')
  pyrcc = "pyrcc" + (System.getenv('PYRCC_VERSION') ?: '5')
  buildTools = "${buildTools}".split(",")
  startTime = System.currentTimeMillis()
  verbose = findProperty('verbose') ?: false
  modulesDir = "${project.projectDir}/modules/"
  buildToolsFile = new File("${project.projectDir}/buildTools.txt")
  space = detectSpace()
}

apply from: "$rootDir/gradle/idea.gradle"

/* List project modules */
task listModules(type: Task) {
  group = 'Other'
  description = 'List project modules'
  doLast {
    println("\nListing " + project.name + " modules ...")
    println("Modules Dir: " + modulesDir + "\n")
    subprojects.forEach {
      println(sprintf(
        "Module: %-12s Version: %-10s Source: %s",
        it.name, it.app_version, it.sourceRoot.replaceAll(modulesDir, '')
      ))
    }
  }
}
