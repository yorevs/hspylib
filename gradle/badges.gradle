/*
    Gradle build badge generation  extension
    Project: HSPyLib
    Created: 4th March, 2021

    See also: https://badgen.net/
*/

/* Helper Functions -------------------------------------------------------- */

/* Download and save the generated badge file */
def badgeGen(subject, status, color, outDir="${project.projectDir}") {
  def url = "https://badgen.net/badge/$subject/$status/$color"
  def outFile = "$outDir/${subject}-badge.svg"
  exec {
    executable "curl"
    args "--connect-timeout", 3, "$url", "--output", "$outFile"
    standardOutput = new ByteArrayOutputStream()
    errorOutput = standardOutput
    ignoreExitValue = true
  }
  println("Badge ${subject} generated: status=${status}  ${url} => ${outFile}")
}

/* Tasks ------------------------------------------------------------------- */

/* Generate a badge based on build */
task generateBuildBadge(type: Task) {
  group = 'Verification'
  description = 'Generate a badge based on build'
  outputs.upToDateWhen { false }
  doLast {
    def failure = tasks.build.state.failure
    badgeGen('build', failure ? 'failed' : 'success', failure ? 'red' : 'green')
  }
}

/* Generate a badge based on all tests */
task generateCheckBadge(type: Task) {
  group = 'Verification'
  description = 'Generate a badge based on all tests'
  outputs.upToDateWhen { false }
  doLast {
    def failure = tasks.check.state.failure
    badgeGen('check', failure ? 'failed' : 'success', failure ? 'red' : 'green')
  }
}

check.finalizedBy(generateCheckBadge)
build.finalizedBy(generateBuildBadge)
